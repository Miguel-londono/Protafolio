---
import { getCollection } from "astro:content";
import auhtor from "../../assets/svg/Author.svg"
import Layout from "../../layouts/Layout.astro";

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((project) => ({
    params: { id: project.slug },
    props: { project },
  }));
}

const { project } = Astro.props;
const { data, slug } = project;
const { title, authors, date, description, image, tecnologias } = data;
---

<Layout>
  <section
    class="fade-in scrollbar-hide sm:h-[calc(100vh-10rem)] max-w-5xl mx-auto flex flex-col p-4 gap-6"
  >
    <!-- Título y botones -->
    <div class="w-full flex flex-col sm:flex-row gap-3">
      <h1 transition:name={`title-${project.slug}`} class="text-3xl font-bold mb-2">
        {title}{" </>"}
      </h1>
      <a
        href="https://github.com/Miguel-londono/App-Peliculas.git"
        class="flex items-center justify-center p-3 gap-3 transition ease-in-out hover:scale-[102%] opacity-80 cursor-pointer bg-slate-600 rounded-lg text-center"
      >
        {`Deploy`}
      </a>
      <span class="ml-auto self-end">{date}</span>
    </div>

    <!-- Carrusel de Imágenes -->
    <div class="relative w-full mx-auto">
      <!-- Contenedor de imágenes -->
      <div id="carousel" class="flex transition-transform duration-700 ease-in-out">
        <img
          transition:name={`img-${project.slug}`}
          src={image.url}
          alt="Imagen principal"
          class="w-full h-fit"
        />
        <img src="https://via.placeholder.com/800x400/ff7f7f" alt="Imagen 2" class="w-full flex-shrink-0" />
        <img src="https://via.placeholder.com/800x400/77aaff" alt="Imagen 3" class="w-full flex-shrink-0" />
      </div>

      <!-- Botones de navegación -->
      <button
        id="prevBtn"
        class="absolute top-1/2 left-4 -translate-y-1/2 bg-black/30 text-white p-2 rounded-full hover:bg-black/50"
      >
        &#10094;
      </button>
      <button
        id="nextBtn"
        class="absolute top-1/2 right-4 -translate-y-1/2 bg-black/30 text-white p-2 rounded-full hover:bg-black/50"
      >
        &#10095;
      </button>
    </div>

    <!-- Descripción -->
    <div>
      <h2 class="text-3xl font-bold mb-2">Descripción{"</>"}</h2>
      <p class="text-justify ">{description}</p>
    </div>

    <!-- Autores -->
    <div>
      <h2 class="text-3xl font-bold mb-2 gap-3">Autores{" </>"}</h2>
      <div class="flex flex-col sm:flex-row">
        {authors.map((author) => {
          return (
            <a
              class="flex items-center justify-center p-3 gap-3 transition ease-in-out hover:opacity-80 cursor-pointer hover:bg-slate-600 rounded-lg text-center"
            >
              <img src={auhtor.src} alt="gitHub" class="w-6 h-6 dark:invert" />
              <h1 class="text-center">{author}</h1>
            </a>
          );
        })}
      </div>
    </div>

    <!-- Tecnologías -->
    <div>
      <h2 class="text-3xl font-bold mb-2 gap-3">Tecnologias{" </>"}</h2>
      <ul class="flex gap-3 py-6">
        {tecnologias.map((tec: any) => (
          <li class="relative group">
            <img
              src={tec.img}
              alt={tec.name}
              class="w-8 h-8 sm:w-12 sm:h-12 dark:invert transition ease-in-out hover:scale-[104%] hover:opacity-70 cursor-pointer"
            />
            <!-- Tooltip personalizado -->
            <span
              class="absolute bottom-full mb-2 hidden group-hover:inline-block bg-gray-700 text-white text-xs rounded py-1 px-2 whitespace-nowrap"
            >
              {tec.name}
            </span>
          </li>
        ))}
      </ul>
    </div>
  </section>
</Layout>

<script>
const carousel = document.getElementById("carousel") as HTMLElement;
const prevBtn = document.getElementById("prevBtn") as HTMLButtonElement;
const nextBtn = document.getElementById("nextBtn") as HTMLButtonElement;

// Verifica que los elementos existen
if (!carousel || !prevBtn || !nextBtn) {
  throw new Error("No se encontraron los elementos del carrusel.");
}

let index: number = 0;

// Seleccionar todas las imágenes dentro del carrusel
const images: NodeListOf<HTMLImageElement> = document.querySelectorAll("#carousel img");
const totalImages: number = images.length;

// Validar que hay imágenes
if (totalImages === 0) {
  throw new Error("No se encontraron imágenes en el carrusel.");
}

// Función para mover el carrusel
function updateCarousel(): void {
  const offset: number = -index * 100; // Mueve el carrusel en porcentajes
  carousel.style.transform = `translateX(${offset}%)`;
}

// Botón siguiente
nextBtn.addEventListener("click", (): void => {
  index = (index + 1) % totalImages; // Ir al siguiente índice
  updateCarousel();
});

// Botón anterior
prevBtn.addEventListener("click", (): void => {
  index = (index - 1 + totalImages) % totalImages; // Ir al índice anterior
  updateCarousel();
});

</script>
